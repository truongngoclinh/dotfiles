// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "alt+left",
    "command": "-breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "alt+left",
    "command": "-cursorWordStartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "cmd+g",
    "command": "references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+cmd+.",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+.",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "alt+1",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "alt+2",
    "command": "workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "alt+5",
    "command": "workbench.view.extensions"
  },
  {
    "key": "shift+cmd+x",
    "command": "-workbench.view.extensions"
  },
  {
    "key": "alt+3",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "alt+4",
    "command": "workbench.view.debug"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "alt+cmd+tab",
    "command": "-workbench.action.showAllEditors"
  },
  {
    "key": "cmd+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "cmd+i",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+f12",
    "command": "-editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f3",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+b",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "f3",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "f3",
    "command": "-workbench.action.terminal.findNextTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+d",
    "command": "-extension.vim_cmd+d",
    "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
  },
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+f",
    "command": "-problems.action.focusFilter",
    "when": "problemsViewFocus"
  },
  {
    "key": "cmd+f",
    "command": "-keybindings.editor.searchKeybindings",
    "when": "inKeybindings"
  },
  {
    "key": "cmd+f",
    "command": "-editor.action.webvieweditor.showFind",
    "when": "!editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "cmd+f",
    "command": "-editor.action.webvieweditor.showFind",
    "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "cmd+f",
    "command": "-editor.action.extensioneditor.showfind",
    "when": "activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "cmd+f",
    "command": "-workbench.action.terminal.focusFindWidget",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "cmd+f",
    "command": "-workbench.action.terminal.focusFindWidget",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+f",
    "command": "-settings.action.search",
    "when": "inSettingsEditor"
  },
  {
    "key": "cmd+f",
    "command": "-actions.find"
  },
  {
    "key": "alt+cmd+r",
    "command": "-toggleSearchRegex",
    "when": "searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "alt+cmd+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+cmd+r",
    "command": "-workbench.action.terminal.toggleFindRegexTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "editor.action.startFindReplaceAction"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction"
  },
  {
    "key": "alt+cmd+f",
    "command": "actions.find"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "shift+cmd+d",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "shift+cmd+o",
    "command": "workbench.action.files.openFileFolder"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "shift+alt+r",
    "command": "editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.tasks.test"
  }
]
